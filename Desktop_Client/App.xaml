<Application x:Class="Desktop_Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Desktop_Client"
             xmlns:Converters="clr-namespace:Desktop_Client.ViewModels.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Startup="ApplicationStart">
    
    <Application.Resources>
        <SolidColorBrush x:Key="MainColor">#8332ed</SolidColorBrush>
        <SolidColorBrush x:Key="HoverColor">#965fde</SolidColorBrush>
        <SolidColorBrush x:Key="PressedColor">#ad87de</SolidColorBrush>
        <SolidColorBrush x:Key="DefaultButtonForeground">White</SolidColorBrush>
        <sys:Double x:Key="BlockHeight">180</sys:Double>
        <sys:Double x:Key="BlockWidth">320</sys:Double>
        <sys:Double x:Key="SocNetworkMiniSize">86</sys:Double>

        <SolidColorBrush x:Key="DatePanel.MouseOver.Background">#644987</SolidColorBrush>

        <Style x:Key="DefaultButton"  TargetType="Button">
            
            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForeground}"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Padding" Value="40 10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="18"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="CornerRadius" Value="4"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
                </Style>
            </Style.Resources>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PressedColor}"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MiniButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="EditButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MiniButton}">
            <Setter Property="Content" Value="✎"/>
        </Style>

        <Style x:Key="AcceptButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MiniButton}">
            <Setter Property="Content" Value="✔"/>
        </Style>

        <Style x:Key="StickyButton" TargetType="Button" >
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Padding" Value="0 20"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PressedColor}"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Converters:VisibilityReverter x:Key="VisibilityReverter"/>
        <Converters:ObjectValueExcistToBoolConverter x:Key="ObjectValueConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <Converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <Converters:NameToPictureConverter x:Key="NameToPictureConverter"/>

        <Converters:ObjectValueExcistToVisibilityCombinConverter
     x:Key="ObjectValueExcistToVisibiliyConverter"
     Converter1="{StaticResource ObjectValueConverter}"
     Converter2="{StaticResource BoolToVis}" />

        <Converters:ObjectValueExcistToVisibilityCombinConverter
     x:Key="BollToVisRevertCombineConverter"
     Converter1="{StaticResource InverseBooleanConverter}"
     Converter2="{StaticResource BoolToVis}" />

    </Application.Resources>
</Application>
